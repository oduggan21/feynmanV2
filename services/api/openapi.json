{
  "openapi": "3.1.0",
  "info": {
    "title": "feynman-api",
    "description": "",
    "license": {
      "name": ""
    },
    "version": "0.1.0"
  },
  "paths": {
    "/sessions": {
      "get": {
        "tags": [
          "handlers"
        ],
        "summary": "List all sessions for a user.",
        "operationId": "list_sessions",
        "parameters": [
          {
            "name": "x-user-id",
            "in": "header",
            "description": "The ID of the user",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of sessions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Session"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "handlers"
        ],
        "summary": "Create a new Feynman teaching session.",
        "operationId": "create_session",
        "parameters": [
          {
            "name": "x-user-id",
            "in": "header",
            "description": "The ID of the user creating the session",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSessionPayload"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Session created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Session"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/sessions/{id}": {
      "get": {
        "tags": [
          "handlers"
        ],
        "summary": "Get a specific session by its ID.",
        "operationId": "get_session",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Session ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "x-user-id",
            "in": "header",
            "description": "The ID of the user",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Session details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Session"
                }
              }
            }
          },
          "404": {
            "description": "Session not found"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/sessions/{id}/status": {
      "patch": {
        "tags": [
          "handlers"
        ],
        "summary": "Update the status of a session.",
        "operationId": "update_session_status",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Session ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "x-user-id",
            "in": "header",
            "description": "The ID of the user",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSessionStatusPayload"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Session status updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Session"
                }
              }
            }
          },
          "404": {
            "description": "Session not found"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "CreateSessionPayload": {
        "type": "object",
        "required": [
          "topic"
        ],
        "properties": {
          "topic": {
            "type": "string",
            "example": "Quantum Mechanics"
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "required": [
          "message"
        ],
        "properties": {
          "message": {
            "type": "string"
          }
        }
      },
      "Message": {
        "type": "object",
        "required": [
          "id",
          "session_id",
          "role",
          "content",
          "created_at"
        ],
        "properties": {
          "content": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "role": {
            "type": "string",
            "example": "user"
          },
          "session_id": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "MessageRole": {
        "type": "string",
        "enum": [
          "User",
          "Ai"
        ]
      },
      "Session": {
        "type": "object",
        "required": [
          "id",
          "user_id",
          "topic",
          "status",
          "created_at",
          "updated_at"
        ],
        "properties": {
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "status": {
            "type": "string",
            "example": "active"
          },
          "topic": {
            "type": "string"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "user_id": {
            "type": "string"
          }
        }
      },
      "SessionStatus": {
        "type": "string",
        "enum": [
          "Active",
          "Ended"
        ]
      },
      "UpdateSessionStatusPayload": {
        "type": "object",
        "required": [
          "status"
        ],
        "properties": {
          "status": {
            "$ref": "#/components/schemas/SessionStatus"
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "Feynman API",
      "description": "Session management for the Feynman teaching agent"
    }
  ]
}